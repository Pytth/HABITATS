# Liste d'espèces
liste_especes <- c("Nardus stricta", "Achillea ptarmica subsp. pyrenaica",
"Agrostis rupestris subsp. rupestris", "Carex umbrosa subsp. huetiana",
"Epikeros pyrenaeus (= Selinum pyrenaeum)", "Euphrasia minima subsp. minima",
"Gentiana alpina", "G. pyrenaica", "Hieracium lactucella",
"Pedicularis pyrenaica", "Ranunculus pyrenaeus", "Trifolium alpinum",
"Selaginella selaginoides")
# Fonction pour détecter et corriger les abréviations de genre
detecter_et_corriger_abreviation <- function(especes) {
genre_precedent <- NULL
especes_corrigees <- character(length = length(especes))
for (i in seq_along(especes)) {
# Utilisation d'une expression régulière pour détecter les abréviations de genre
if (grepl("^\\w+\\.", especes[i])) {
# Extraire l'abréviation de genre
abrev_genre <- gsub("^([A-Z]+)\\..*", "\\1", especes[i])
# Corriger l'abréviation en utilisant le genre précédent
if (!is.null(genre_precedent)) {
especes_corrigees[i] <- paste(genre_precedent, gsub("^[A-Z]+\\.", "", especes[i]), sep = " ")
} else {
especes_corrigees[i] <- especes[i]
}
} else {
especes_corrigees[i] <- especes[i]
# Mettre à jour le genre précédent si l'espèce n'est pas une abréviation
genre_precedent <- gsub("^([A-Z]+)\\s+.*", "\\1", especes[i])
}
}
return(especes_corrigees)
}
detecter_et_corriger_abreviation(liste_especes)
especes = liste_especes
grepl("^\\w+\\.", especes[i])
grepl("^\\w+\\.", especes[1])
phrase = "Nardus stricta, Achillea ptarmica subsp. pyrenaica, Agrostis rupestris subsp. rupestris,
Carex umbrosa subsp. huetiana, Epikeros pyrenaeus (= Selinum pyrenaeum), Euphrasia minima subsp. m.,
Gentiana alpina, G. pyrenaica, Hieracium lactucella, Pedicularis pyrenaica, Ranunculus pyrenaeus, Trifolium alpinum,
Selaginella selaginoides"
strsplit(phrase, " ")[[1]]
strsplit(phrase, " ,")[[1]]
strsplit(phrase, " \,")[[1]]
strsplit(phrase, " \\,")[[1]]
strsplit(phrase, " &,")[[1]]
strsplit(phrase, " |,")[[1]]
strsplit(phrase, " |,|\n")[[1]]
strsplit(phrase, " |,|\n|(")[[1]]
strsplit(phrase, " |,|\n|(")[[1]]
strsplit(phrase, " |,|\n|()")[[1]]
strsplit(phrase, " |,|\n|(")[[1]]
strsplit(phrase, " |,|\n")[[1]]
mot[!is.null]
is.null(mot)
mot = strsplit(phrase, " |,|\n")[[1]]
is.null(mot)
?is.null
lapply(mot, function(x) ifelse(is.null(x), NULL, x))
lapply(mot, function(x) ifelse(is.null(x), NULL, x))[[1]]
lapply(mot, function(x) ifelse(is.null(x), NULL, x))[[]]
lapply(mot, function(x) ifelse(is.null(x), NULL, x))[[]][]
lapply(mot, function(x) is.null(x))
which(lapply(mot, function(x) is.null(x)))
which(lapply(mot, function(x) is.null(x)))
which(!lapply(mot, function(x) is.null(x)))
liste(lapply(mot, function(x) is.null(x)))
list(lapply(mot, function(x) is.null(x)))
unlist(lapply(mot, function(x) is.null(x)))
unlist(lapply(mot, function(x) is.empty(x)))
unlist(lapply(mot, function(x) is.na(x)))
test_vide <- function(x) {
return(nchar(x) == 0)
}
unlist(lapply(mot, function(x) test_vide(x)))
mot[unlist(lapply(mot, function(x) test_vide(x)))]
mot[unlist(!lapply(mot, function(x) test_vide(x)))]
test_vide <- function(x) {
return(nchar(x) != 0)
}
mot[unlist(lapply(mot, function(x) test_vide(x)))]
#Liste de mot dans ma phrase
mot = mot[unlist(lapply(mot, function(x) test_vide(x)))]
grepl("^\\w+\\.$", mot)
sub("^([A-Z]+)\\.$", "\\1", mot)
grepl("^\\w+\\.$", mots[1])
mots = strsplit(phrase, " |,|\n")[[1]]
test_vide <- function(x) {
return(nchar(x) != 0)
}
#Liste de mot dans ma phrase
mots = mots[unlist(lapply(mot, function(x) test_vide(x)))]
grepl("^\\w+\\.$", mots[1])
grepl("^\\w+\\.$", mots[5])
grepl("^\\w+\\.$", mots[6])
sub("^([A-Z]+)\\.$", "\\1", mot[6])
sub("^([A-Z]+)\\.$", "\\1", mots[6])
grepl("^\\w+\\.$", mots[6])
gsub("^([A-Z]+)\\s+.*", "\\1", mots)
gsub("^([A-Z]+)\\s+.*", "\\1", mots[6])
# Fonction pour détecter et corriger les abréviations de genre dans une phrase
detecter_et_corriger_abreviation_phrase <- function(phrase) {
mots <- strsplit(phrase, " ")[[1]]
genre_precedent <- NULL
for (i in seq_along(mots)) {
mot <- mots[i]
# Utilisation d'une expression régulière pour détecter les abréviations de genre
if (grepl("^\\w+\\.$", mot)) {
# Extraire l'abréviation de genre
abrev_genre <- gsub("^([A-Z]+)\\.$", "\\1", mot)
# Corriger l'abréviation en utilisant le genre précédent
if (!is.null(genre_precedent)) {
mots[i] <- paste(genre_precedent, gsub("^[A-Z]+\\.$", "", mot), sep = " ")
}
} else {
# Mettre à jour le genre précédent si le mot n'est pas une abréviation
genre_precedent <- gsub("^([A-Z]+)\\s+.*", "\\1", mot)
}
}
return(paste(mots, collapse = " "))
}
# Liste de phrases avec des noms d'espèces
phrases <- c("Nardus stricta est une plante.",
"Achillea ptarmica subsp. pyrenaica est une autre espèce.",
"Gentiana alpina, G. pyrenaica, et Hieracium lactucella sont des exemples.")
# Appliquer la fonction sur la liste de phrases
phrases_corrigees <- sapply(phrases, detecter_et_corriger_abreviation_phrase)
phrases_corrigees
if (!require("stringr")) {install.packages("stringr")}+library("stringr")
str_detect("^[A-Z]",mots)
str_detect(mots,"^[A-Z]")
mot_Genre = str_detect(mots,"^[A-Z]")
mot_Genre = mots[str_detect(mots,"^[A-Z]")]
mot_Genre
